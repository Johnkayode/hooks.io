generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Source {
  id           String        @id @default(uuid())
  name         String
  events       Event[]
  Subscription Subscription?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Endpoint {
  id            String          @id @default(uuid())
  url           String          @unique
  subscriptions Subscription[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  EventDelivery EventDelivery[]
}

model Subscription {
  id        String     @id @default(uuid())
  Source    Source     @relation(fields: [sourceId], references: [id])
  sourceId  String     @unique
  endpoints Endpoint[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Event {
  id       String @id @default(uuid())
  Source   Source @relation(fields: [sourceId], references: [id])
  sourceId String
  payload  Json
  headers  Json

  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  EventDelivery EventDelivery[]
}

model EventDelivery {
  id String @id @default(uuid())

  Event   Event  @relation(fields: [eventId], references: [id])
  eventId String

  Endpoint   Endpoint @relation(fields: [endpointId], references: [id])
  endpointId String

  retry_count Int @default(0)

  status    EventDeliveryStatus @default(PROCESSING)
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
}

enum EventDeliveryStatus {
  PROCESSING
  SUCCESSFUL
  FAILED
}
