version: '3'
services:
  redis:
    image: 'redis:alpine'
    ports:
      - '6379:6379'
    container_name: redis
  postgres:
    image: 'postgres'
    environment:
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_DB=$DB_NAME
    ports:
      - 5432:$DB_PORT
    container_name: postgres
    volumes:
      - postgres:/var/lib/postgres
  app:
    restart: on-failure
    build:
      context: ./api
      dockerfile: Dockerfile
      target: base
    depends_on:
      - postgres
      - redis
    volumes:
      - ./api/app:/src/api/app
      - ./api/nodemon.json:/src/api/nodemon.json
      - ./.env:/src/api/.env
    container_name: app
    expose:
      - 5000
    ports:
      - '5000:5000'
    command: npm run dev
  worker:
    build:
      context: ./api
      dockerfile: Dockerfile
      target: base
    depends_on:
      - redis
      - postgres
    volumes:
      - ./api/app:/src/api/app
      - ./api/nodemon.json:/src/api/nodemon.json
      - ./.env:/src/api/.env
    container_name: worker-1
    command: npm run worker-dev
    restart: on-failure

volumes: 
  postgres: